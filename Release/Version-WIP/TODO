See Also: design/new-features-and-additions.txt
TODO
	. EENO Implementation
		. traversal.c
			. Handle %? when %< is set - including special case: %(%?:...)
			. Attention: bm_context_mark, when %< is set...
		. dangling connections => to be checked & released upon
			on event < expression
	. Testing
		. 3_TM.multi/TM-head_tape.story
	. Pass design/story/{all}
	. Release
		. Examples-v2.0
			. 0_TuringMachine
			. 1_Schematize
			. 2_TM.single
			. 3_TM.multi
				. TM-head_tape.story
				. TM-head_tape_cell.story
				. TM-head_cell_reporter.story << to be written
		. Additonal examples
			. yak using new Cell design (and literals)
			. interactive // TBD
ON-GOING
    Version-1.2 Documentation
	     Release Documents
		. instantiation may do half a job - since we do not pre-check with bm_void()
		. feature-list.txt / Release Notes / README.txt, etc.
	     Announce / Version-2.0
		. NOTE: everything is Pair, starting from [address,value]

NICE TO HAVE
	. extend do : variable, value to allow arguments to be FILTERED
		. issue is: in the simple case where we have
			do : variable : value
		  then we need to replace the second ':' with ','
		  => post-process string (post-processing easy)
	. Remodel occurrence->data->expression from char * to TBD
	. Design document: formalize the internal data structures, e.g.
		cell:[ entry:[ name, narratives:{} ], ctx:[ this, registry ] ]
	. parser.c
		. more & better error messages
		. extract bm_parser_report from parser.c => error.c ?
		. integrate 'caught' in CNParserData => all flags
	. do_input multiple args support
		do < arg1, arg2, ..., argN > : "format" <
	. code cleanup
		. replace all the for ( ; ; ) with the model found
	  	  in Base/Examples/6_BTreefy/btree.c
	. bm_void() - should bm_instantiate() verify expression?
		. Pros: instantiate all or nothing
		. Cons: performances
		. Alternative:
		  1. propose special execution mode (like Debug)
		  2. special do - e.g. do$ - where bm_void() is enforced
	  Current status & Decision
		. bm_instantiate() does not invoke bm_void()
		  => bm_instantiate() may do half a job (user responsibility)
	. allow more to be done in INI files (e.g. assignment) ?
		. Now the whole bm_instantiate() syntax is accessible
		. and I will need new capabilities for Cell constructor
	. per proto:expression <<< where proto can be '?' or narrative-type proto
		. PER/ELSE_PER
		. also DO_PER, e.g.
			do per ?:expression
				: var : %?
		  => only ONE occurrence->data->expression?
	. multi-threading (pthreads)
	. restore DEBUG mode in freeCNDB() and db_update() - cf. Version-1.1

DONE
	. instantiate.c apply data->carry when set
	. parser.c: File Format support for %% and .. Register Variables
	. Bufferized active @ register so that activation/deactivation changes
	  are applied at the end of the frame - and not during.
	. Implementation support for Narrative parent .. and self %% R. V.
	  Challenge: as CNDB entities, we must allow these variables to be
	  deprecated - and thereby deprecate all their ascendants - without
	  them being released. This required adapting db_update() - now taking
	  argument 'parent' - and db_remove() to not remove said proxies.
	. support CNDB proxy
		. See design/specs/bm-PROXY-considerations.txt
		. implementation: database.c, db_op.c, context.c
		. activation / deactivation
		. output @@@ in case of proxy
	. parser.c: support do @< expression / do ~< expression
		. implementation - see expression.c: bm_proxy_op()
	. multi-variable output => improved TM-single.story
	. cell exit conditions => freeContext()
		. prune proxies prior to freeing CNDB
		. flush active Register Variable @
	. operation.c
		. implemented bm_proxy_op() for do @<... and do ~<...
		  => invokes bm_activate() / bm_deactivate() as BMQueryCB
	. instantiate.c
		. on no-completion: pop & flush pipe all the way
		. support cell instantiation (!!)
	. renamed ESUB(e,ndx) into CNSUB(e,ndx), where
		#define CNSUB(e,ndx) \
			( e->sub[!ndx] ? e->sub[ndx] : NULL )
		. now in Base/include/entity.h (was in query.h)
	. db_register() always manifests
	. changed Pipe Register Variable name from %! to %|
	. parser.c
		. cell instantiation syntax (!!)
	. rewrote Base/Examples/6_BTreefy
	. extract btreefy from ../../Base to ../../Base/Examples/

