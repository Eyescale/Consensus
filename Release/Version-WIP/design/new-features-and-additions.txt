
Version-1.2 File Format Interface additions

	--[x] signals
		>>>>	do term~
	--[x] not
			in ~.: expression	passes if expression fails
			on ~.: expression	passes if no such event
			do ~.: expression	nop
	--[x] assignment
		>>>>	in : variable : value	// inc. special case where value is ~.
		>>>>	on : variable : value	// inc. special case where value is ~.
		>>>>	do : variable : value	// inc. special case where value is ~.
	--[.] ternary operator
			in ( expr ? expr : expr )
		>>>>	in ( expr ?: expr )
			in ( expr ? expr :)

			on ( expr ? expr : expr )
			on ( expr ?: expr )
			on ( expr ? expr :)
	--[.] assignment / ternary operator
		>>>>	do : expr : %( expr ?: expr )
			do : expr : %( expr ? expr :)
			do : expr : %( expr ? expr : expr )
	--[ ] list / ellipsis
			do (( expr, ... ):sequence:)	// ellipsis
  Where
	>>>> means Version-1.2 release feature requirement
	--[x] means done
	--[.] means in progress
	--[ ] means todo		


Version-1.2 Extensions

	The question mark can be used anywhere within in/on expressions,
	not only as ?:expression - e.g.

		on ~((*,variable), ? )
			do >"%_": %?

	outputs variable's previous value - unless it too has been released

