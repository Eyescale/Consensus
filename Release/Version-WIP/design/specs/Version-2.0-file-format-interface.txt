Name
	Consensus B% Version-2.0 File Format Interface - New Features

Synopsis
	    	Feature Name			Expression

	Instantiate			do !! Narrative ( ... )
					do !! Narrative ( ... ) @<
					do !! Narrative ( ... ) ~<

					do : handle : !! Narrative ( ... )
					do : handle : !! Narrative ( ... ) @<
					do : handle : !! Narrative ( ... ) ~<

	Subscribe			do @< expression
					do : handle : @< expression

	Unsubscribe			do ~< expression
					do : handle : ~< expression

	EENO				on event < src

	EENO register variables		%<?
					%<!

	this register variable		%%

	parent register variable	..

Description
	1. Instantiate

	CNCell instances are created upon either one of the following parent
	cell's narrative operation:

		do !! Narrative ( ... )
		do !! Narrative ( ... ) @<
		do !! Narrative ( ... ) ~<

		do : handle : !! Narrative ( ... )
		do : handle : !! Narrative ( ... ) @<
		do : handle : !! Narrative ( ... ) ~<

	The second occurrence within each of the subsets above is equivalent
	to the first (default), whereby both parent and cell subscribe to each
	other upon instantiation, and therefore are able to track each other's
	events (a.k.a.  changes) via narrative EENO.

	The second subset of above-listed occurrences additionally allows a
	proxy of the instantiated connection to be assigned to a local CNDB
	handle - expression - if the connection was instantiated.

	The last occurrence within each subset denotes an occurrence whereby
	parent unsubscribes from its instantiated cell upon instantiation,
	after which neither parent nor child are able to track each other's
	events until potentially future explicit connection.

	The very last occurrence unassigns and releases the connection upon
	instantiation, which leaves the (*,handle) relationship instance
	created with nothing to show for it - not even via ~((*,handle),?) -
	but it is manifested.

	2. Subscribe

	CNCell instantiation involves instantiating connections, which can be
	handled and stored (as proxy) within a cell's CNDB.

	These connections can also be communicated from one cell to another,
	thereby allowing a cell to subscribe to another, unrelated cell,
	provided only that it is passed a proxy of a connection to that cell
	by one of its connections - or by its parent, at instantiation.

	See example in the EENO register variables section below.

	3. Unsubscribe

	Same as above, with unsubscribe from instead of subscribe to.

	4. EENO

	External Event Narrative Occurrences (EENO) are occurrences in the form

			on event < src

		where
			event and src are expressions

	See information concerning how these expressions are processed prior to
	launching the query in the Caveats section below.

	5. EENO register variables

	The EENO register variables %<? and %<! allow subsequent reference to be
	made by the narrative to the EENO query results, as

		%<?	representing event - first match
		%<!	representing src - proxy to the corresponding connection

	6. Narrative this register variable

	The Narrative this register variable %% references a proxy to the
	narrative's current cell->ctx->this CNInstance, to be used for
	comparison - e.g.

		on : connection : ? < .
			// one of my sources just registered a new connection
			in %<?: %%
				// that connection is me
			else in %<?
				// already subscribed
			else
				// subscribe to my source's new connection
				do @< %<?

	7. Narrative parent register variable

	Likewise the Narrative parent register variable .. references a proxy to
	the narrative's parent cell - provided parent did not unsubscribe upon
	instantiation.

Caveats
	Any referencing term of the EENO event and src expressions, such as

		register variable
		expression:filter
		%( expression )
		*expression

	will be dereferenced within the narrative instance's own cell's CNDB
	PRIOR to the query being launched.

	Such is the limitation imposed, by design, to the Consensus B%
	inter-cell communication protocol, in that it allows only to query
	manifested changes - and not one another's internal condition.

