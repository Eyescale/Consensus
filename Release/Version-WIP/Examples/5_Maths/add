:
/*
	Uses pre-instantiated literal - aka. dial - e.g.
		(:0123456789:)	==	0 --+---v
					    1 --+---v
						2 --+---v
						    3 --+---v
							... +---v
							    9 --+--\0
	to compute the sum Z of the two numbers X and Y
*/
	on init
		do : dial : !! Dial((:0123456789:))
//		do : p : ((X,...):123:)	// no carry
		do : p : ((X,...):189:)
		do : q : ((Y,...):13234:)
		do : r : ((Z,...)::)
		do : carry : 0
		do : mode : DIAL
	else in : mode : DIAL
		on : r : ?	// dial operation on next digit(s)
			in : p : (.,?)
				do : *dial : ((%?,(*q?%(*q:(.,?)):0)),*carry)
			else in : q : (.,?)
				do : *dial : ((%?,0),*carry)
			else
				do : mode : OUTPUT
				in : carry : 1
					do : r : ( %?, 1 )
			do : carry : 0
		else on : %% : ? < *dial
			in %<?:~'\0'>
				do : r : ( *r, %<?> )
				in : p : (?,.)
					do : p : ( %?:(.,*) ? ~. : %? )
				in : q : (?,.)
					do : q : ( %?:(.,*) ? ~. : %? )
			else do : carry : 1
	else in : mode : OUTPUT
		on : mode : .
			do > "\t"
			do : p : %((X,*), . )
			do : q : X
		else on : p : (.,?)
			do > "%c" : %?
			in ?: ( *p, . )
				do : p : %?
			else in : q : X
				do > " + "
				do : p : %((Y,*), . )
				do : q : Y
			else do > " = "
		else in : r : (.,?)
			in %?:~*
				do > "%c" : %?
				do : r : %(*r:(?,.))
			else
				do > "\n"
				do exit

: Dial
/*
	compute p + q + carry (digits) on demand
*/
	on : %% : ? < ..
		do : p : %<?:((?,.),.)>		// base
		do : q : %<?:((.,?),.)>		// offset
		do : carry : %<?:(.,?)>		// carry
	else on : q : ?
		in %?: 0
			in : carry : 0
				do : .. : *p	// notify result
			else
				do : carry : 0
				do : q : 1
		else in (*p,(?,.))
			do : p : %?		// increment p
			do : q : %(?,(*q,.))	// decrement q
		else
			do : .. : '\0'		// notify carry
	else on : .. : '\0'
//		do : p : %((?,(.,.)):~%(.,?))	// reset base
		do : p : 0
		do : q : %(?,(*q,.))		// decrement q
	else on exit < ..
		do exit


