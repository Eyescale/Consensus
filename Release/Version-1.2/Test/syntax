
	on init
		do >"Usage: ./B%% -p Test/syntax\n"
		do exit
		do ({ titi, toto, tata, })
		do (:titi:)
		do ( titi, ((( toto ? tutu : tata ), ... ):asdlkjasd:) )
		in ( toto ? tata ? titi : roro : titi )
		in ( toto ? tata ? titi ? tutu :)
		do input: <
		do :~ titi : ~( tutu, tata )
		do ( { tata, toto }, titi )
		do ~.	// nop
	else in ( titi ?: tata )
	else in ( expr1 ? expr2 ? expr3 :: expr4 )
	else on ~.:((*,titi),toto)
		do >"~.: gotcha\n"
	else in : titi : ~.
		do >"in :titi:~.\n"
	else in ?:%( titi ?: tata )
		do : toto : %( tutu ? toto : titi )
		do %( titi ? toto :)
	else on ((*,input), . )
		do >"read: %s\n": *input
		do titi~
	else in ( *, input )
		do input: <
		in alpha
		else do toto~
	else
		do exit
