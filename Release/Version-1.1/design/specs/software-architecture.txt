
Architecture Diagram*
				
				   traversal.c
				 /     | ^      \
	main.c -> operation.c ->       | |        -> database.c
			|	 \     v |	/         ^
			|	   expression.c           |
			|			          |
		         - - - - - - - - - - - - - - - - -

Component Interfaces*

	main -> operation interface
		main			cnOperate
					cnUpdate

	--------------------------------------------------

	operation -> database interface
		cnUpdate		db_update	

	operation -> traversal interface
		in_condition		db_feel
		on_event		db_feel

	operation -> expression interface
		do_action		bm_substantiate
					bm_release	
		do_output		bm_output
					bm_outputf
		do_input		bm_substantiate
					bm_release
					p_filtered

	--------------------------------------------------

	traversal -> database interface
		db_feel			db_log
		db_traverse		db_first
					db_next

	traversal -> expression interface
		db_traverse		p_locate
					bm_lookup
		traverse_CB		fetch_CB
					release_CB
					output_CB
			invoked by db_traverse
		xp_verify		bm_verify
					p_prune
			invoked by db_verify
			invoked by db_feel and db_traverse

	--------------------------------------------------

	expression -> database interface
		bm_substantiate		db_couple
		bm_lookup		db_lookup
		bm_register		db_lookup
					db_register
		bm_output		cn_out
		output_CB		cn_out
		release_CB		db_deprecate

	expression -> traversal interface
		bm_void			db_feel
		bm_fetch		db_traverse
			invoked by db_substantiate
		bm_release		db_traverse
		bm_output		db_traverse

Notes
	. expression.c gathers all functions dealing specifically with the
	  language. We use the prefix bm_ (as in B%) for those functions which
	  are interfacing with the CNDB, and the prefix p_ for those involving
	  only string operations.


--
*Disclaimer: not considered here:
	newCNDB(), freeCNDB()
	readNarrative(), freeNarrative()

