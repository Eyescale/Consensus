
Package Dependencies

	main.c	database.c
		narrative.c
		operation.c	database.c
				expression.c	database.c
						context.c
						traversal.c
				traversal.c	database.c
						context.c
						util.c
				context.c	database.c
						util.c

	    ------ main.c ------ 
	   v         |          v
     narrative.c     .----- operation.c ----.------------.----------- 
	             |          ^           v            |           |
		     .----------:----- expression.c -----.-----------.
	             |          |           ^            v           |
		     .----------:-----------:------- traversal.c ----.----------
	             |                                               v          |
		     .------------------------------------------- context.c ----.
	             v                                               ^          v
		database.c                                            ------- util.c
	

Component Interfaces*

	main.c
			     -> narrative.c
	    main		    readNarrative
				    freeNarrative
		             -> database.c
	    main		    newCNDB
				    freeCNDB
		             -> operation.c
	    main		    cnOperate
				    cnUpdate

	operation.c
			     -> database.c
	    cnOperate		    db_out
	    cnUpdate		    db_update
	    in_condition	    db_is_empty
	    on_event		    db_still
	    do_action		    db_exit
		             -> expression.c
	    do_action		    bm_substantiate
				    bm_release	
	    do_output		    bm_outputf
	    do_input		    bm_inputf
		             -> traversal.c
	    cnOperate		    bm_traverse
	    operate		    bm_traverse
	    activate_CB		    bm_traverse
	    in_condition	    bm_feel
	    on_event		    bm_feel
		             -> context.c
	    cnOperate		    bm_push
				    bm_pop
	    operate		    bm_register	// .LOCAL
				    pop_mark_register
	    operate_CB		    bm_push
				    bm_pop
	    activate_CB		    bm_push
				    bm_pop

	expression.c
			     -> database.c
	    bm_substantiate*	    db_couple	  *also invoked by bm_inputf
	    bm_void*		    db_is_empty	  *invoked by bm_substantiate
	    release_CB*		    db_deprecate  *invoked by bm_release
	    bm_output*		    db_output	  *invoked by bm_outputf
	    output_CB*		    db_output	  *invoked by bm_output
		             -> traversal.c
	    bm_void*		    bm_feel	 *invoked by bm_substantiate
	    bm_query*		    bm_traverse  *invoked by bm_substantiate
	    bm_release*		    bm_traverse  *invoked by bm_inputf
	    bm_output*		    bm_traverse  *invoked by bm_outputf
		             -> context.c
	    bm_substantiate	    bm_register
				    bm_lookup
	    bm_void*		    bm_lookup	 *invoked by bm_substantiate

	traversal.c
			     -> database.c
		bm_feel		    db_log
		bm_traverse	    db_first
				    db_next
			     -> context.c
		bm_traverse	    bm_lookup
		bm_match*	    bm_lookup  *invoked by bm_verify
			     -> operation.c
		traverse_CB*	    operate_CB *invoked by bm_traverse
				    activate_CB
			     -> expression.c
		traverse_CB*	    query_CB   *invoked by bm_traverse
				    release_CB
				    output_CB
			     -> util.c
		bm_traverse	    p_locate
		bm_verify	    p_locate_mark

	context.c
			     -> database.c
	    bm_lookup		    db_lookup
	    bm_register		    db_register
				    db_instantiate
			     -> util.c
	    bm_push		    p_locate_param

	util.c
	    		     -> context.c
	    p_locate_param	    arg_register_CB


