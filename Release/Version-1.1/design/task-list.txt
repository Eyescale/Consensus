TODO
	. registry variable %?
		. bm_feel() and bm_lookup(): narrative registry usage
		. readNarrative: support "%?" and "?:expression"
		. test case
	. narrative instances
		. readNarrative(): support sub-narratives definition
		. CNNarrative:[ base:[proto,root], sub:{[proto,root]} ]
		. refactor cnOperate according to execution-model.txt
	. single character identifier entities
		. narrative.c: readNarrative
		. operation.c: do_input, do_output
		. expression.c: db_input, db_output, db_outputf
	. make '+' and '-' logics relative
	. regression testing framework
	...

DONE
	. code refactoring according to code-analysis.txt
		. operation.c: implement narrative registry
		. transport BMContext instead of CNDB
		. added util.c and include/util.h
	. optimize db_feel() using db_traverse() - with pivot
	. code analysis for narrative registry implementation
	. yak.story: removed %arg from narrative body
	. input pre-processing - narrative.c
		. filters out comments and line continuation from parser
	. code cleanup
		. software architecture document
		. moved db_feel() out of database.c, into traversal.c
		. renamed language-specific functions with prefix bm_
	  	. moved xpn_add() and bm_match() - was: xp_match -
		  from traversal.c to expression.c
	. line continuation after \
		+ narrative.c: handle '>' in "expr" vs. "base" state
		+ allow \CR in strings
	. standalone % identifier entity
	. standalone * identifier entity
