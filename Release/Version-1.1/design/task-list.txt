TODO
	. support external CNDB config file, as in ./B% file.story file.cndb
		. debug ( rule, eee )
		. validate cnLoad
			. read expression
			. read (: _ )
			. read { , , }
		. transpose to readNarrative / bm_substantiate
		. extract rule processing in Conversation

	. do > "format": a, b | c, d: "format" <
		do > "(( is, %_ ), %_ )": b, a | : "%_" <
		do > "(( is, %_ ), %_ )": b, a | :<

	. support :< file:xxx
	. Testing
		. input: single character entities
		  NOTE: 'p' MUST be used when testing base single character entity p
			when the local variable entity .p is declared
	. regression testing framework
	. update software-architecture document(s) to latest architecture
		. document wildcard logics (actually somwehat documented in wildcard.c)
		. document narrative instance registry: this vs. .local vs. .expression
	. finalize README.txt
	. NOTE somewhere:
		on some_event
			do exit
			do input:<
	  will still block on input - as actual input is performed right away, as opposed
	  to after frame, as it should (later).
	. implement custom getc/ungetc/fgetc to work around OSX terminal bug (EOF)
	  see below "OSX Terminal bug illustrated"

DONE
	. yak.story: launch %( rule, %( ?, base ))
	. support external CNDB config file, as in ./B% file.story file.cndb
	  cf. cnLoad( char *path, CNDB *db )
		. support do { ... } and B% literals (: ... ) - specs to be added
		. implemented db_load - alternative to db_register (no manifestation)
		. implemented db_couple - alternative to db_instantiate (no manifestation)
		. implement load_schema
		. optimized: if expression starts with { ... }
	. added ../../Base/sequence.c implementing string demultiplication
	. added "on ~." expression to support handling deadlocks
		. also added "in ~." for symmetry
	. introduced regex type identifiers, allowing e.g. in *event:/[ \t]/
		. added Test/CN.rx
	. feature complete: single character identifier entities
		. added Test/CN.char
		. added design/specs/test_hval.c
		. support CNDB internal vs. external representation
			. context.c: charscan, bm_lookup, bm_register
			. database.c: cn_out
		. bm_output: done
			. refactored bm_outputf() and bm_inputf()
		. support in readNarrative and narrative_output
	. feature complete: narrative instances
		. narrative_output: cf ./Test/CN.yak
		. tokenized CNDB index and BMContext registry
		. support for .local declaration
		. support do .( expression ) [ NOTE: as input preprocessing ]
		. generalized narrative identifier/proto format (cf. readNarrative)
		. bm_push: setup 'this' and other narrative params from passed arguments
		. refactored operation.c:cnOperate according to execution-model.txt
		. supported narrative declarations, allowing to activate narrative instances
		  and more importantly to inhibit them when context does not require
		. introduced CNStory
			. in Version-1.1 CNStory:{ CNNarrative:[ proto, base ] }
			. whereas in ../Version-1.0 we do #define CNStory CNNarrative
			. extended narrative.c:readStory (was: readNarrative) to support
			  multiple narratives and narrative protos
			. refactored ../../Examples/TuringMachine/main.c
	. made '+' and '-' logics relative
	. implemented db_exit/db_out: instantiates/tests (nil,nil)
	. registry variable %? (aka. mark register)
		. readNarrative: support "%?" and "?:expression"
		. bm_push(): variable creation
		. bm_feel(), bm_traverse(): variable assignment
		. bm_xxx(), p_locate() and locate_mark(): variable usage
		. added test case ./Test/CN.mark
	. code refactoring according to code-analysis.txt
		. operation.c: implement narrative registry
		. transport BMContext instead of CNDB
		. added util.c and include/util.h
	. optimized db_feel() using db_traverse() - with pivot
	. code analysis for narrative registry implementation
	. yak.story: removed %arg from narrative body
	. input pre-processing - narrative.c
		. filters out comments and line continuation from parser
	. code cleanup
		. software architecture document
		. moved db_feel() out of database.c, into traversal.c
		. renamed language-specific functions with prefix bm_
	  	. moved xpn_add() and bm_match() - was: xp_match -
		  from traversal.c to util.c
	. line continuation after \
		+ narrative.c: handle '>' in "expr" vs. "base" state
		+ allow \CR in strings
	. standalone % identifier entity
	. standalone * identifier entity

OSX Terminal bug illustrated - with input "hello(ctrD)"

	#include <stdio.h>
	#include <stdlib.h>

	#include <sys/types.h>
	#include <sys/uio.h>
	#include <unistd.h>

	int main( int argc, char *argv[] )
	{
		int input = 0;
		do {
#if 0           
	                switch ( read( STDIN_FILENO, &input, 1 ) ) {
			case 0: input = EOF; break;
			default: printf( "%c", input );
			}
#else           
			input = fgetc( stdin );
			printf( "%c", input );
#endif  
		}
        	while ( input != EOF );
	}

